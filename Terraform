provider "aws" {
  region = "us-east-1"
}

resource "aws_security_group" "devops_sg" {
  name        = "devops-sg"
  description = "Allow SSH, HTTP, Jenkins, SonarQube, Minikube"

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 8080
    to_port     = 8080
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 9000
    to_port     = 9000
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 30000
    to_port     = 32767
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "devops_ec2" {
  ami           = "ami-0c101f26f147fa7fd" # Amazon Linux 2023 (us-east-1)
  instance_type = "t2.medium"
  key_name      = "hezron25jul2025"
  security_groups = [aws_security_group.devops_sg.name]

  tags = {
    Name = "hezron-ec2"
  }

  user_data = <<-EOF
#!/bin/bash
# Update and install essentials
sudo dnf update -y
sudo dnf install -y amazon-linux-extras
sudo amazon-linux-extras enable docker
sudo dnf install -y docker git java-17-amazon-corretto conntrack

# Enable Docker
sudo systemctl enable --now docker
sudo usermod -aG docker ec2-user

# Jenkins install
sudo tee /etc/yum.repos.d/jenkins.repo >/dev/null <<'EOT'
[jenkins]
name=Jenkins-stable
baseurl=https://pkg.jenkins.io/redhat-stable
gpgcheck=1
gpgkey=https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
EOT

sudo dnf install -y jenkins
sudo systemctl enable --now jenkins
sudo usermod -aG docker jenkins
sudo systemctl restart jenkins

# SonarQube via Docker
sudo docker volume create sonarqube_data
sudo docker volume create sonarqube_extensions
sudo docker volume create sonarqube_logs
sudo docker run -d --name sonarqube --restart unless-stopped \
  -p 9000:9000 \
  -v sonarqube_data:/opt/sonarqube/data \
  -v sonarqube_extensions:/opt/sonarqube/extensions \
  -v sonarqube_logs:/opt/sonarqube/logs \
  sonarqube:lts-community

# Minikube install
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube

# kubectl install with retry and path setup
curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
echo 'export PATH=$PATH:/usr/local/bin' >> /home/ec2-user/.bashrc
chown ec2-user:ec2-user /usr/local/bin/kubectl

# Minikube environment and start
export CHANGE_MINIKUBE_NONE_USER=true
export MINIKUBE_HOME=/home/ec2-user
export USER=ec2-user
export HOME=/home/ec2-user
sudo -u ec2-user -E minikube start --driver=docker
EOF
}

output "ec2_public_ip" {
  value = aws_instance.devops_ec2.public_ip
}
